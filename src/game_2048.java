
import java.awt.event.KeyEvent;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ekjot
 */
public class game_2048 extends javax.swing.JFrame {

    /**
     * Creates new form game_2048
     */
    public game_2048() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        l1 = new javax.swing.JLabel();
        l5 = new javax.swing.JLabel();
        l6 = new javax.swing.JLabel();
        l7 = new javax.swing.JLabel();
        l8 = new javax.swing.JLabel();
        l9 = new javax.swing.JLabel();
        l10 = new javax.swing.JLabel();
        l11 = new javax.swing.JLabel();
        l12 = new javax.swing.JLabel();
        l13 = new javax.swing.JLabel();
        l14 = new javax.swing.JLabel();
        l15 = new javax.swing.JLabel();
        l16 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        l4 = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        up = new javax.swing.JButton();
        left = new javax.swing.JButton();
        right = new javax.swing.JButton();
        down = new javax.swing.JButton();
        l = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l1.setBackground(new java.awt.Color(51, 255, 255));
        l1.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l5.setBackground(new java.awt.Color(51, 255, 255));
        l5.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l6.setBackground(new java.awt.Color(51, 255, 255));
        l6.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l7.setBackground(new java.awt.Color(51, 255, 255));
        l7.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l8.setBackground(new java.awt.Color(51, 255, 255));
        l8.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l9.setBackground(new java.awt.Color(51, 255, 255));
        l9.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l10.setBackground(new java.awt.Color(51, 255, 255));
        l10.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l11.setBackground(new java.awt.Color(51, 255, 255));
        l11.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l12.setBackground(new java.awt.Color(51, 255, 255));
        l12.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l13.setBackground(new java.awt.Color(51, 255, 255));
        l13.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l14.setBackground(new java.awt.Color(51, 255, 255));
        l14.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l15.setBackground(new java.awt.Color(51, 255, 255));
        l15.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l16.setBackground(new java.awt.Color(51, 255, 255));
        l16.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l2.setBackground(new java.awt.Color(51, 255, 255));
        l2.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l3.setBackground(new java.awt.Color(51, 255, 255));
        l3.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        l4.setBackground(new java.awt.Color(51, 255, 255));
        l4.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        l4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(l13, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l14, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l15, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(l16, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(l5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(l6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(l7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(l9, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(l10, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(l11, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(l12, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l7, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l9, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l10, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l11, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l12, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l13, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(l14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(l15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(l16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        start.setFont(new java.awt.Font("Comic Sans MS", 3, 20)); // NOI18N
        start.setText("Start");
        start.setFocusable(false);
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        up.setFont(new java.awt.Font("Comic Sans MS", 3, 16)); // NOI18N
        up.setIcon(new javax.swing.ImageIcon(getClass().getResource("/up.png"))); // NOI18N
        up.setFocusable(false);
        up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upActionPerformed(evt);
            }
        });

        left.setFont(new java.awt.Font("Comic Sans MS", 3, 16)); // NOI18N
        left.setIcon(new javax.swing.ImageIcon(getClass().getResource("/left.png"))); // NOI18N
        left.setFocusable(false);
        left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftActionPerformed(evt);
            }
        });

        right.setFont(new java.awt.Font("Comic Sans MS", 3, 16)); // NOI18N
        right.setIcon(new javax.swing.ImageIcon(getClass().getResource("/right.png"))); // NOI18N
        right.setFocusable(false);
        right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightActionPerformed(evt);
            }
        });

        down.setFont(new java.awt.Font("Comic Sans MS", 3, 16)); // NOI18N
        down.setIcon(new javax.swing.ImageIcon(getClass().getResource("/down.png"))); // NOI18N
        down.setFocusable(false);
        down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(left, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(right, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(up, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(down, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(up, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(left, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(right, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(down, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        l.setFont(new java.awt.Font("Comic Sans MS", 3, 20)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(start)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
int a[][]={{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}};           //main array on which all the calculations take place
 int b[][]={{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}};         //extra array
 int c[][]={{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}};         //extra array
 int win=0,check=0;                                                    //win and check are used to find and check win
 
 
   void flush(){                                                             
  
       l1.setText("");
       l2.setText("");
       l3.setText("");
       l4.setText("");
       l5.setText("");
       l6.setText("");
       l7.setText("");
       l8.setText("");
       l9.setText("");
       l10.setText("");
       l11.setText("");
       l12.setText("");
       l13.setText("");
       l14.setText("");
       l15.setText("");
       l16.setText("");
       
       for(int i=0;i<4;i++){
           for(int j=0;j<4;j++){
              a[i][j]=0;
              b[i][j]=0;
              c[i][j]=0;
           }
        }
       
       l.setText("");
       check=0;
   }                                         //flush used to reset all the values and restatrt the game
    
    
void give_value(){
   
int assign=0;
while(assign<1){    
int temp=Integer.parseInt((""+Math.random()).substring(2,4));              //gives any two digit integer
    if(temp>=1&&temp<=16){                                                                    //check if number lies btw 1 & 16
    
        //check if position on screen at given number place is empty or not
        
        if(temp==1&&(l1.getText()).equals("")){assign=1;}                            
        else if(temp==2&&(l2.getText()).equals("")){assign=1;}
        else if(temp==3&&(l3.getText()).equals("")){assign=1;}
        else if(temp==4&&(l4.getText()).equals("")){assign=1;}
        else if(temp==5&&(l5.getText()).equals("")){assign=1;}
        else if(temp==6&&(l6.getText()).equals("")){assign=1;}
        else if(temp==7&&(l7.getText()).equals("")){assign=1;}
        else if(temp==8&&(l8.getText()).equals("")){assign=1;}
        else if(temp==9&&(l9.getText()).equals("")){assign=1;}
        else if(temp==10&&(l10.getText()).equals("")){assign=1;}
        else if(temp==11&&(l11.getText()).equals("")){assign=1;}
        else if(temp==12&&(l12.getText()).equals("")){assign=1;}
        else if(temp==13&&(l13.getText()).equals("")){assign=1;}
        else if(temp==14&&(l14.getText()).equals("")){assign=1;}
        else if(temp==15&&(l15.getText()).equals("")){assign=1;}
        else if(temp==16&&(l16.getText()).equals("")){assign=1;}
        
        
              if(assign==1){                                                            //if found empty position, print 1 or 2 at that position
                  set_values(temp,random_value());
              }                  
    
   
           }  
       }    
}                                     //assigns 1 or 2 at any random empty position at screen
  

void set_values(int pos,int value){

    if(pos==1){l1.setText(""+value);}
    else if(pos==2){l2.setText(""+value);}
    else if(pos==3){l3.setText(""+value);}
    else if(pos==4){l4.setText(""+value);}
    else if(pos==5){l5.setText(""+value);}
    else if(pos==6){l6.setText(""+value);}
    else if(pos==7){l7.setText(""+value);}
    else if(pos==8){l8.setText(""+value);}
    else if(pos==9){l9.setText(""+value);}
    else if(pos==10){l10.setText(""+value);}
    else if(pos==11){l11.setText(""+value);}
    else if(pos==12){l12.setText(""+value);}
    else if(pos==13){l13.setText(""+value);}
    else if(pos==14){l14.setText(""+value);}
    else if(pos==15){l15.setText(""+value);}
    else if(pos==16){l16.setText(""+value);}
    
    }             //print given number at given position on screen

int get_values(int pos){
 
int value=0;
                                                      //set value of variable value as number at given position on screen otherwise if empty sets value as 0

if(pos==1){value=((l1.getText()).equals("")?0:Integer.parseInt(l1.getText()));}
else if(pos==2){value=((l2.getText()).equals("")?0:Integer.parseInt(l2.getText()));}
else if(pos==3){value=((l3.getText()).equals("")?0:Integer.parseInt(l3.getText()));}
else if(pos==4){value=((l4.getText()).equals("")?0:Integer.parseInt(l4.getText()));}
else if(pos==5){value=((l5.getText()).equals("")?0:Integer.parseInt(l5.getText()));}
else if(pos==6){value=((l6.getText()).equals("")?0:Integer.parseInt(l6.getText()));}
else if(pos==7){value=((l7.getText()).equals("")?0:Integer.parseInt(l7.getText()));}
else if(pos==8){value=((l8.getText()).equals("")?0:Integer.parseInt(l8.getText()));}
else if(pos==9){value=((l9.getText()).equals("")?0:Integer.parseInt(l9.getText()));}
else if(pos==10){value=((l10.getText()).equals("")?0:Integer.parseInt(l10.getText()));}
else if(pos==11){value=((l11.getText()).equals("")?0:Integer.parseInt(l11.getText()));}
else if(pos==12){value=((l12.getText()).equals("")?0:Integer.parseInt(l12.getText()));}
else if(pos==13){value=((l13.getText()).equals("")?0:Integer.parseInt(l13.getText()));}
else if(pos==14){value=((l14.getText()).equals("")?0:Integer.parseInt(l14.getText()));}
else if(pos==15){value=((l15.getText()).equals("")?0:Integer.parseInt(l15.getText()));}
else if(pos==16){value=((l16.getText()).equals("")?0:Integer.parseInt(l16.getText()));}

return value;
}                             //returns value of given position as on screen

int random_value(){
  
int value;
    double temp=Math.random();
    if(temp<=0.5){ value=1; }
    else{value=2;}
    
return value;
}                                      //returns any value from 1 or 2

void screen_to_array(){
  
int pos=1;
for(int i=0;i<4;i++){
      for(int j=0;j<4;j++){
             a[i][j]=get_values(pos);
                pos++;
               }
         }
}                            //copies screen values into array a[][]

void replace_zeros(int update,int exchange){
 
    for(int x=0;x<4;x++){                             //copies array a[][] into b[][]
           for(int y=0;y<4;y++){
                  b[x][y]=a[x][y];
           }
    }
    
    int j,j_org,C;
                  if(update>0){
                      j_org=0;
                      C=0;
                  }
                else{
                      j_org=3;
                      C=1;
                  }
                                                             //swaps 0s in a[][] with preceeding value
        for(int i=0;i<=3;i++){
            
            for(int k=1;k<=3;k++){
                
                j=j_org;
                
                for(;j>=(C*k)&&j<=(3-k)+(C*k);j=j+update){
                    
                    if(exchange==1){
                        
                        if(a[j][i]==0){
                            
                            a[j][i]=a[j+update][i];
                            a[j+update][i]=0;
                        }   
                    }
                    
                    else{
                        
                        if(a[i][j]==0){
                            
                            a[i][j]=a[i][j+update];
                            a[i][j+update]=0;
                        }
                    }
                    
                }
            }
        }
}       //brings numbers toward given side by swapping zeros

int compare_array(int a1[][],int b1[][]){
 
    int value=1;
    for(int x=0;x<4;x++){
        for(int y=0;y<4;y++){
            if(b1[x][y]!=a1[x][y]){
                value=0;
            }
        }
    }

    return value;
}              //compares given 2 arrays a1 and b1 and returns 1 if both are equal else 0

void array_to_screen(){
   
int pos=1;
             for(int i=0;i<4;i++){
                 for(int j=0;j<4;j++){
                     set_values(pos,a[i][j]);
                     pos++;
                 }
             }
}                                  //copies array a[][] values into screen values

void remove_zero_from_screen(){

    if((l1.getText()).equals("0")){l1.setText("");}
    if((l2.getText()).equals("0")){l2.setText("");}
    if((l3.getText()).equals("0")){l3.setText("");}
    if((l4.getText()).equals("0")){l4.setText("");}
    if((l5.getText()).equals("0")){l5.setText("");}
    if((l6.getText()).equals("0")){l6.setText("");}
    if((l7.getText()).equals("0")){l7.setText("");}
    if((l8.getText()).equals("0")){l8.setText("");}
    if((l9.getText()).equals("0")){l9.setText("");}
    if((l10.getText()).equals("0")){l10.setText("");}
    if((l11.getText()).equals("0")){l11.setText("");}
    if((l12.getText()).equals("0")){l12.setText("");}
    if((l13.getText()).equals("0")){l13.setText("");}
    if((l14.getText()).equals("0")){l14.setText("");}
    if((l15.getText()).equals("0")){l15.setText("");}
    if((l16.getText()).equals("0")){l16.setText("");}

}                 //replaces 0 from screen with empty spaces

void add(int update,int exchange){

   for(int x=0;x<4;x++){                               //copies a[][] into c[][]
       for(int y=0;y<4;y++){
           c[x][y]=a[x][y];
       }
   }
  
    int j,j_org,C;
                        if(update>0){
                            j_org=0;
                            C=0;
                        }
                        else{
                            j_org=3;
                            C=1;
                        }
                                                                     //add two consective same numbers int array a[][] 
            for(int i=0;i<=3;i++){
                int k=1;
                j=j_org;
                
                for(;j>=(C*k)&&j<=(3-k)+(C*k);j=j+update){
                    
                    if(exchange==1){
                        
                        if(a[j][i]==a[j+update][i]){
                            
                            a[j][i]+=a[j+update][i];
                            a[j+update][i]=0;
                        }
                    }
                    
                    else{
                        
                        if(a[i][j]==a[i][j+update]){
                            
                            a[i][j]+=a[i][j+update];
                            a[i][j+update]=0;
                        }
                    }
                }
            }
}                  //adds two same numbers occuring int a[][] as specifies

 void check_win(){
     int assign=0;
                                                     //checks if any space is empty or not
        if((l1.getText()).equals("")){assign=1;}
        else if((l2.getText()).equals("")){assign=1;}
        else if((l3.getText()).equals("")){assign=1;}
        else if((l4.getText()).equals("")){assign=1;}
        else if((l5.getText()).equals("")){assign=1;}
        else if((l6.getText()).equals("")){assign=1;}
        else if((l7.getText()).equals("")){assign=1;}
        else if((l8.getText()).equals("")){assign=1;}
        else if((l9.getText()).equals("")){assign=1;}
        else if((l10.getText()).equals("")){assign=1;}
        else if((l11.getText()).equals("")){assign=1;}
        else if((l12.getText()).equals("")){assign=1;}
        else if((l13.getText()).equals("")){assign=1;}
        else if((l14.getText()).equals("")){assign=1;}
        else if((l15.getText()).equals("")){assign=1;}
        else if((l16.getText()).equals("")){assign=1;}
  
                                                     //if no empty space found
             if(assign==0){ 
                 int temp[][]={{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}};
                 screen_to_array(); 
                            for(int i=0;i<4;i++){                         //converts a[][] into temp[][]
                                for(int j=0;j<4;j++){
                                    temp[i][j]=a[i][j];
                                }
                            }
                                                          //checks for any possible step
                            win=0;
                            up.doClick();
                            down.doClick();
                            left.doClick();
                            right.doClick();
                                                                //if no step possible
                            if(win==4){
                                l.setText("You Lose.");
                            }
                            
                                                              //if any step is possible
                            else{
                                                            //copies temp[][] into a[][]
                                for(int i=0;i<4;i++){
                                    for(int j=0;j<4;j++){
                                        a[i][j]=temp[i][j];
                                    }
                                }
                                array_to_screen();
                                remove_zero_from_screen();
                            
                            }
             }
             check=0;
 }                                        //checks whether player lose or not


    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed

        flush();
        give_value();
        give_value();
        
// TODO add your handling code here:
    }//GEN-LAST:event_startActionPerformed

    private void upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upActionPerformed
  
        if(check==0){                                //checks for any lose
            check++;
            check_win();
        }
        screen_to_array();                  
        replace_zeros(1,1);                      
        int temp=compare_array(a,b);
        add(1,1);
        replace_zeros(1,1);
        array_to_screen();
        remove_zero_from_screen();
        
        if(temp==0||compare_array(a,b)==0||compare_array(a,c)==0){                //if some change had occured then enters new number
            give_value();
        }
        else{
            win++;
        }

// TODO add your handling code here:
    }//GEN-LAST:event_upActionPerformed

    private void leftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftActionPerformed
   
        if(check==0){                                //checks for any lose
            check++;
            check_win();
        }
        screen_to_array(); 
        replace_zeros(1,-1);
        int temp=compare_array(a,b);
        add(1,-1);
        replace_zeros(1,-1);
        array_to_screen();
        remove_zero_from_screen();
       
        if(temp==0||compare_array(a,b)==0||compare_array(a,c)==0){                //if some change had occured then enters new number
            give_value();
        }
        else{
            win++;
        }
       
// TODO add your handling code here:
    }//GEN-LAST:event_leftActionPerformed

    private void rightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightActionPerformed
  
        if(check==0){                                //checks for any lose
            check++;
            check_win();
        }
        screen_to_array(); 
        replace_zeros(-1,-1);
        int temp=compare_array(a,b);
        add(-1,-1);
        replace_zeros(-1,-1);
        array_to_screen();
        remove_zero_from_screen();
       
        if(temp==0||compare_array(a,b)==0||compare_array(a,c)==0){                //if some change had occured then enters new number
            give_value();
        }
        else{
            win++;
        }
       // TODO add your handling code here:
    }//GEN-LAST:event_rightActionPerformed

    private void downActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downActionPerformed
 
        if(check==0){                                //checks for any lose
            check++;
            check_win();
        }
        screen_to_array(); 
        replace_zeros(-1,1);
        int temp=compare_array(a,b);
        add(-1,1);
        replace_zeros(-1,1);
        array_to_screen(); 
        remove_zero_from_screen();
       
        if(temp==0||compare_array(a,b)==0||compare_array(a,c)==0){                //if some change had occured then enters new number
            give_value();
        }
        else{
            win++;
        }
       // TODO add your handling code here:
    }//GEN-LAST:event_downActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

if(evt.getKeyCode()==KeyEvent.VK_UP){up.doClick(); }
else if(evt.getKeyCode()==KeyEvent.VK_DOWN){down.doClick(); }
else if(evt.getKeyCode()==KeyEvent.VK_LEFT){left.doClick(); }
else if(evt.getKeyCode()==KeyEvent.VK_RIGHT){right.doClick(); }

// TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(game_2048.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(game_2048.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(game_2048.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(game_2048.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new game_2048().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton down;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel l;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l10;
    private javax.swing.JLabel l11;
    private javax.swing.JLabel l12;
    private javax.swing.JLabel l13;
    private javax.swing.JLabel l14;
    private javax.swing.JLabel l15;
    private javax.swing.JLabel l16;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JLabel l4;
    private javax.swing.JLabel l5;
    private javax.swing.JLabel l6;
    private javax.swing.JLabel l7;
    private javax.swing.JLabel l8;
    private javax.swing.JLabel l9;
    private javax.swing.JButton left;
    private javax.swing.JButton right;
    private javax.swing.JButton start;
    private javax.swing.JButton up;
    // End of variables declaration//GEN-END:variables
}
